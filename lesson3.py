#1
"""
Реализовать функцию, принимающую два числа (позиционные аргументы)
и выполняющую их деление.
Числа запрашивать у пользователя,
предусмотреть обработку ситуации деления на ноль.
"""
a = int(input('введите делимое: '))
b = int(input('введите делитель: '))
def result (a, b):
    if b == 0:
        return ('на ноль не делится!')
    else: return a / b
print(result(a, b))

#2
""" Выполнить функцию, которая принимает несколько параметров, 
описывающих данные пользователя: 
имя, фамилия, год рождения, город проживания, email, телефон. 
Функция должна принимать параметры как именованные аргументы. 
Осуществить вывод данных о пользователе одной строкой."""
name = (input('введите имя: '))
surname = (input('введите фамилию: '))
year = (input('введите год рождения: '))
city = (input('введите город проживания: '))
email = (input('введите email: '))
tel = (input('введите телефон: '))
def result (name, surname, year, city, email, tel):
    return ('имя', name, 'фамилия', surname,'год рождения', year,'город проживания', city,'email', email,'телефон', tel)
print(result(name, surname, year, city, email, tel))


#3
""" Реализовать функцию my_func(),
которая принимает три позиционных аргумента
и возвращает сумму наибольших двух аргументов
"""
def my_func(a,b,c):
    list = [a,b,c]
    min1 = min(list)
    list.remove(min1)
    return sum(list)
print(my_func(9,2,3))



#4
""" Программа принимает действительное положительное число x
и целое отрицательное число y.
Выполните возведение числа x в степень y.
Задание реализуйте в виде функции my_func(x, y).
При решении задания нужно обойтись без встроенной функции возведения числа в степень.
Подсказка: попробуйте решить задачу двумя способами.
Первый — возведение в степень с помощью оператора **.
Второй — более сложная реализация без оператора **, предусматривающая использование цикла.
"""
def my_func(x, y):
    return (x ** y)
print(my_func(5,3))

def my_func(x, y):
    list = [x,y]
    while y != 0:
        return  x * x
        y = y -1
print(my_func(4,3))

# Ильяс, подскажите, почему не работает второй способ?
# логика такая: при каждой итерации Х умножается сам на себя,
# и количество итераций будет пока У не уменьшится до нуля.
# Похоже что-то не то с записью по У, а что не пойму


#6 7
"""
6. Реализовать функцию int_func(), принимающую слова из маленьких латинских букв
и возвращающую их же, но с прописной первой буквой.
Например, print(int_func(‘text’)) -> Text.
7. Продолжить работу над заданием.
В программу должна попадать строка из слов, разделённых пробелом.
Каждое слово состоит из латинских букв в нижнем регистре.
Нужно сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы.
Используйте написанную ранее функцию int_func().
"""
str1 = input("введите текст: ")
def int_func(str1):
    return (str1.title())
print(int_func(str1))

str2 = input("введите текст: ")
str3 = str2.lower()
print(int_func(str3))


#5
""" Программа запрашивает у пользователя строку чисел, разделённых пробелом.
При нажатии Enter должна выводиться сумма чисел.
Пользователь может продолжить ввод чисел, разделённых пробелом и снова нажать Enter.
Сумма вновь введённых чисел будет добавляться к уже подсчитанной сумме.
Но если вместо числа вводится специальный символ, выполнение программы завершается.
Если специальный символ введён после нескольких чисел,
то вначале нужно добавить сумму этих чисел к полученной ранее сумме
и после этого завершить программу.
"""

str_list = [input("введите числа через пробел: ")]
int_list = int(str_list)
print(int_list)
# Ильяс, нужна помощь (может на уроке минуту уделите и расскажете)
# логику понимаю, что берем текст, прокидываем в лист,
# оттуда по разделителю в лист разбиваем и также работаем
# синтаксис как реализовать - нет, не понимаю.




